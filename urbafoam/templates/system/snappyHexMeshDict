/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// https://www.openfoam.com/documentation/cpp-guide/html/guide-meshing-snappyhexmesh-castellation.html

#include "etc/snappyHexMeshDict.cfg"

castellatedMesh on;
snap            on;
addLayers       off;

geometry
{

    {{#buildingModels}}
    {{name}}
    {
        type triSurfaceMesh;
        file "{{filename}}";
    }
    {{/buildingModels}}



    BoxZ  // refinement based on z level over whole domain
    {
     type searchableBox;
     min  ({{background_minx}} {{background_miny}} {{analysis_minz}});
     max  ({{background_maxx}} {{background_maxy}} {{analysis_minz}});
    }


    Box1 // central area
    {
        type searchableBox;
        min  ({{analysis_minx}} {{analysis_miny}} {{analysis_minz}});
        max  ({{analysis_maxx}} {{analysis_maxy}} {{analysis_maxz}});
    }

    Plane1 // central area
    {
        type searchableBox;
        min  ({{analysis_minx}} {{analysis_miny}} {{analysis_minz}});
        max  ({{analysis_maxx}} {{analysis_maxy}} {{analysis_minz}});
    }


};

castellatedMeshControls
{


    features
    (
      {{#buildingModels}}
      {
        file  "{{file_basename}}.eMesh";
        level {{feature_level}};
      }
      {{/buildingModels}}
    );

    refinementSurfaces
    {

        {{#buildingModels}}
        {{name}}
        {
            level {{refinementLevel}};
            patchInfo  { type wall; }
        }
        {{/buildingModels}}

    }

    refinementRegions
    {

     BoxZ  // Vertical throughout domain
     {
         mode distance;
         levels (({{thirdheight}} {{verticalRefinementLevel}}));
     }

     Box1
     {
         mode inside;
         levels ((1e15 {{insideRefinementLevel}}));
     }

     Plane1
     {
         mode distance;
         levels {{verticalCentralRefinement}};
     }

    }

    locationInMesh ({{locationInMesh_x}} {{locationInMesh_y}} {{locationInMesh_z}});
}

snapControls
{



    explicitFeatureSnap    true;
    implicitFeatureSnap    false;
}

addLayersControls
{
    layers
    {
        ".*"
        {
            nSurfaceLayers {{nSurfaceLayers}};
        }
    }

    relativeSizes       true;
    expansionRatio      1.3;
    finalLayerThickness 0.5;
    minThickness        1e-3;


}

writeFlags
(
    scalarLevels
    layerSets
    layerFields
);


// ************************************************************************* //
